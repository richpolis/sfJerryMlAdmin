<?php

/**
 * BaseUsuariosEventos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $user_id
 * @property varchar $subject
 * @property string $description
 * @property timestamp $start_time
 * @property timestamp $end_time
 * @property boolean $is_all_day_event
 * @property varchar $color
 * @property varchar $recurring_rule
 * @property integer $status
 * @property sfGuardUser $User
 * 
 * @method integer         getUserId()           Returns the current record's "user_id" value
 * @method varchar         getSubject()          Returns the current record's "subject" value
 * @method string          getDescription()      Returns the current record's "description" value
 * @method timestamp       getStartTime()        Returns the current record's "start_time" value
 * @method timestamp       getEndTime()          Returns the current record's "end_time" value
 * @method boolean         getIsAllDayEvent()    Returns the current record's "is_all_day_event" value
 * @method varchar         getColor()            Returns the current record's "color" value
 * @method varchar         getRecurringRule()    Returns the current record's "recurring_rule" value
 * @method integer         getStatus()           Returns the current record's "status" value
 * @method sfGuardUser     getUser()             Returns the current record's "User" value
 * @method UsuariosEventos setUserId()           Sets the current record's "user_id" value
 * @method UsuariosEventos setSubject()          Sets the current record's "subject" value
 * @method UsuariosEventos setDescription()      Sets the current record's "description" value
 * @method UsuariosEventos setStartTime()        Sets the current record's "start_time" value
 * @method UsuariosEventos setEndTime()          Sets the current record's "end_time" value
 * @method UsuariosEventos setIsAllDayEvent()    Sets the current record's "is_all_day_event" value
 * @method UsuariosEventos setColor()            Sets the current record's "color" value
 * @method UsuariosEventos setRecurringRule()    Sets the current record's "recurring_rule" value
 * @method UsuariosEventos setStatus()           Sets the current record's "status" value
 * @method UsuariosEventos setUser()             Sets the current record's "User" value
 * 
 * @package    sfJerryMlAdmin
 * @subpackage model
 * @author     Ricardo Alcantara Gomez <richpolis@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseUsuariosEventos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('usuarios_eventos');
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('subject', 'varchar', 64, array(
             'type' => 'varchar',
             'notnull' => false,
             'length' => 64,
             ));
        $this->hasColumn('description', 'string', 4000, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 4000,
             ));
        $this->hasColumn('start_time', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('end_time', 'timestamp', null, array(
             'type' => 'timestamp',
             'notnull' => false,
             ));
        $this->hasColumn('is_all_day_event', 'boolean', null, array(
             'type' => 'boolean',
             'default' => false,
             ));
        $this->hasColumn('color', 'varchar', 10, array(
             'type' => 'varchar',
             'length' => 10,
             ));
        $this->hasColumn('recurring_rule', 'varchar', 255, array(
             'type' => 'varchar',
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => false,
             'default' => 0,
             'length' => 1,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));
    }
}