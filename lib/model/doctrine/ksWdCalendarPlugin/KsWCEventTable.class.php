<?php

/**
 * KsWCEventTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class KsWCEventTable extends PluginKsWCEventTable
{
    /**
     * Returns an instance of this class.
     *
     * @return object KsWCEventTable
     */
    
    static public $DISPONIBLE = -1;
    static public $PERSONAL = 0;      
    static public $EN_MEDIACION = 1;      
    static public $APARTADO = 2; 
    
    public static function getInstance()
    {
        return Doctrine_Core::getTable('KsWCEvent');
    }
    public function getCriteriaOrdenada(){
    	$q=Doctrine_Query::create()
    	->from('KsWCEvent e')
    	->orderBy('e.start_time');
    	return $q;
    }
    public function getCriteriaOrdenadaPorActualizacion(){
    	$q=Doctrine_Query::create()
    	->from('KsWCEvent e')
    	->orderBy('e.start_time DESC');
    	return $q;
    }
    public function getCriteriaUltimosEventos(){
    	$q=$this->getCriteriaOrdenadaPorActualizacion();
    	$rootAlias = $q->getRootAlias();
    	$q->leftJoin($rootAlias . '.Talentos t');
    	return $q;
    }
    
    public function getEventosPorArreglo($arreglo){
    	$q=$this->getCriteriaOrdenada();
    	$q->andWhereIn('e.id', $arreglo);
    	$rootAlias = $q->getRootAlias();
    	$q->leftJoin($rootAlias . '.Talentos t');
    	return $q->execute();
    }
    
    public function getEventosPorCotizacion($cotizacion){
    	$q=$this->getCriteriaOrdenada();
    	$q->addWhere('e.cotizacion_id=?',$cotizacion);
    	$rootAlias = $q->getRootAlias();
    	$q->leftJoin($rootAlias . '.Talentos t');
    	return $q->execute();
    }
    public function getEventosPorCotizacionYTalento($cotizacion,$talento){
    	$q=$this->getCriteriaOrdenada();
    	$q->addWhere('e.cotizacion_id=?',$cotizacion);
    	$q->addWhere('e.talento_id=?',$talento);
    	$rootAlias = $q->getRootAlias();
    	$q->leftJoin($rootAlias . '.Talentos t');
    	return $q->execute();
    }
    
    public function getEventosPorFecha($fecha_inicial,$fecha_final){
    	$q=$this->getCriteriaOrdenada();
    	$q->addWhere('e.start_time BETWEEN ? to ?',array($fecha_inicial,$fecha_final));
    	$rootAlias = $q->getRootAlias();
    	$q->leftJoin($rootAlias . '.Talentos t');
    	return $q->execute();
    }
    
    
    public function addCriteriaEventosActivos($q){
    	$q->addWhere('e.is_active=?',true);
    	return $q;
    }
    public function getMaximo(){
    	$q=$this->getCriteriaOrdenada();
    	$cmd=$q->execute();
    	return $cmd->count()+1;
    }
    public function retrieveBackendEventosList(Doctrine_Query $q)
    {
    	$q=$this->getCriteriaOrdenada();
    	$rootAlias = $q->getRootAlias();
    
    	if(sfContext::getInstance()->getUser()->getCotizacion()>0 && sfContext::getInstance()->getUser()->getTalento()>0){
    		$user=sfContext::getInstance()->getUser();
    		$result = array_merge($user->getEventosCotizacion(), $user->getEventos());
    		$q->andWhereNotIn($rootAlias.'.id', $result);
    	}elseif(sfContext::getInstance()->getUser()->getCotizacion()>0){
    		$user=sfContext::getInstance()->getUser();
    		$result = array_merge($user->getEventosCotizacion(), $user->getEventos());
    		$q->andWhereNotIn($rootAlias.'.id', $result);
    	}elseif(sfContext::getInstance()->getUser()->getTalento()>0){
    		$user=sfContext::getInstance()->getUser();
    		$result = array_merge($user->getEventosTalento(), $user->getEvento());
    		$q->andWhereNotIn($rootAlias.'.id', $result);
    	}
    
    	$q->leftJoin($rootAlias . '.Talentos t');
    	return $q;
    }
    
    public function getSqlQuery($query){
    	$q = Doctrine_Query::create()
    	->from('KsWCEvent e')
    	->where('e.subject like ?', $query)
    	//->orWhere('i.titulo like ?',$query)
    	->limit(20);
    	$q = Doctrine_Core::getTable('Talentos')->addCriteriaTalentosActivos($q);
    
    	return $q->execute();
    }
}