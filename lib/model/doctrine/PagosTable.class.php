<?php

/**
 * PagosTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class PagosTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object PagosTable
     */
    
    static public $INCOMPLETO = 0;      
    static public $APROBADO = 1;      
    static public $PAGOS_CALCULADOS = 2;
    
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Pagos');
    }
    public function getCriteriaOrdenada(){
        $q=Doctrine_Query::create()
           ->from('Pagos p')
           ->orderBy('p.created_at');
        return $q;
    }
    public function getCriteriaOrdenadaPorActualizacion(){
        $q=Doctrine_Query::create()
                ->from('Pagos p')
                ->orderBy('p.updated_at DESC');
        return $q;
    }
    public function getCriteriaUltimosPagos(){
        $q=$this->getCriteriaOrdenadaPorActualizacion();
        $rootAlias = $q->getRootAlias();
        $q->leftJoin($rootAlias . '.Clientes c');
        $q->leftJoin($rootAlias . '.DetallesPagos d');
        $q->leftJoin('d.Cotizaciones z');
        return $q;
    }
    
    public function getCriteriaPendientesDePagos(){
        $q=$this->createQuery('pag');  
        $rootAlias = $q->getRootAlias();
        //$user=  sfContext::getInstance()->getUser()->getGuardUser(); 
        //$q->addWhere($rootAlias.'.user_id=?',$user->getId());
        $q->leftJoin($rootAlias . '.Clientes cli');
        $q->leftJoin($rootAlias . '.DetallesPagos dp');
        $q->leftJoin('dp.Cotizaciones cot');
        $q->andWhere('cot.is_pay=?',false);
        $user=  sfContext::getInstance()->getUser()->getGuardUser();
        if(!$user->getIsSuperAdmin()){
            //evitar que todos vean todo. solo el super usuario.
            $q->andWhere('cot.user_id=?',$user->getId());    
        }
        return $q;
    }
    
    public function getPagosPendientesClientes(){
        $q=$this->getCriteriaPendientesDePagos();
        return $q->execute();
    }
    
    public function getHistorialPagosJerryml(array $valores){
        $q=$this->getCriteriaOrdenada();
        $rootAlias = $q->getRootAlias();
        $desde=$valores['desde']['year']."-".$valores['desde']['month']."-".$valores['desde']['day'];
        $hasta=$valores['hasta']['year']."-".$valores['hasta']['month']."-".$valores['hasta']['day'];
        $q->leftJoin($rootAlias . '.DetallesPagos dp');
        $q->leftJoin('dp.Cotizaciones cot');
        $q->leftJoin('cot.DetallesCotizacion dc');
        $q->leftJoin('cot.Eventos e');
        $q->addWhere('dp.fecha_pago BETWEEN ? to ?',array($desde,$hasta));
        $q->addWhere('dp.status=?',$valores['status']);
        $q->addOrderBy('dp.fecha_pago asc');
        return $q->execute();
    }
    
    
    
    public function retrieveBackendPagosList(Doctrine_Query $q)
    {
      $user=  sfContext::getInstance()->getUser()->getGuardUser();   
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Clientes c');
      $q->leftJoin($rootAlias . '.DetallesPagos d');
      $q->leftJoin('d.Cotizaciones z');
      $q->addOrderBy($rootAlias.'.created_at desc');
           
      if(sfContext::getInstance()->getUser()->getClientePagos()>0){
            $q->addWhere('c.id=?', sfContext::getInstance()->getUser()->getClientePagos());
      }
           
      return $q;
    }
    public function getPagosConClienteDetallesForId($id){
      $q=$this->createQuery('a');  
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Clientes c');
      $q->leftJoin($rootAlias . '.DetallesPagos d');
      $q->leftJoin('d.Cotizaciones z');
      $q->addWhere($rootAlias.'.id=?',$id);
      return $q->fetchOne();
    }
    
    public function getPagosConClienteDetallesForClienteId($id){
      $q=$this->createQuery('a');  
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Clientes c');
      $q->leftJoin($rootAlias . '.DetallesPago dp');
      $q->leftJoin('dp.Cotizaciones z');
      $q->addWhere($rootAlias.'.cliente_id=?',$id);
      return $q->fetchOne();
    }
    
    public function getLoteDePagoForClienteId($id){
      $q=$this->createQuery('p');  
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Clientes c');
      $q->addWhere($rootAlias.'.cliente_id=?',$id);
      $q->addWhere($rootAlias.'.is_cerrado=?',false);
      return $q->fetchOne();
    }
    
    public function getCotizacionesPorArreglo($arreglo){
        $q=$this->getCriteriaOrdenada();
        $rootAlias = $q->getRootAlias();
        $q->andWhereIn($rootAlias.'.id', $arreglo);
        $q->leftJoin($rootAlias . '.Clientes c');
        $q->leftJoin($rootAlias . '.DetallesPagos d');
        $q->leftJoin('d.Cotizaciones z');
        return $q->execute();
    }
}