<?php

/**
 * DetallesCotizacion
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sfJerryMlAdmin
 * @subpackage model
 * @author     Your name here
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class DetallesCotizacion extends BaseDetallesCotizacion
{
    public function __toString() {
        return sprintf("%s.-%s",$this->getId(),$this->getTalentos());
    }
    public function getTotal(){
        //$this->save();
        return $this->getSubtotal()+$this->getIva();
    }
    public function save(\Doctrine_Connection $conn = null) {
        
        if($this->getPrecio()){
            $precio=$this->getPrecio();
            $gananciaJerryml=$precio*($this->getMargenJerryMl()/100);
            $gananciaTalento=$precio-$gananciaJerryml;
            $gananciaComisionista=$gananciaJerryml*($this->getMargenComisionista()/100);
            $this->setGananciaTalento($gananciaTalento);
            $this->setGananciaJerryml($gananciaJerryml);
            $this->setGananciaComisionista($gananciaComisionista);
            $this->setSubtotal($precio);
            $this->setIva($this->getSubtotal() * CotizacionesTable::$IVA);
        }
        
        if(!$this->getPosition()){
            $this->setPosition(Doctrine_Core::getTable('DetallesCotizacion')->getMaximo());
        }
        
        parent::save($conn);
        
        $cotizacion=$this->getCotizaciones();
        $cotizacion->calcular();
    }
    public function getPrecioConIva(){
        return $this->getPrecio() * CotizacionesTable::$CON_IVA;
    }
    public function calcularPagosTalentos(){
        $detalles_pagos_talentos=$this->getDetallesPagosTalentos();
        $importe=0.0;
        foreach ($detalles_pagos_talentos as $detalle){
            if($detalle->getStatus()==PagosTalentosTable::$PAGOS_CALCULADOS){
                $importe+=$detalle->getImporte();
            }
        }
        if($importe==$this->getGananciaTalento()){
            $this->setIsPayTalento(true);
            $this->save();
        }
    }
    public function validarCancelarAprobacion(){
        $importe=0;
        foreach($this->getDetallesPagosTalentos() as $dpt){
            if($dpt->getStatus()==PagosTalentosTable::$PAGOS_CALCULADOS){
                $importe+=$dpt->getImporte();
            }
        }
        return ($importe>0?false:true);
    }
    
    public function delete(\Doctrine_Connection $conn = null) {
        
        if($this->validarCancelarAprobacion()){
            $ces=Doctrine_Core::getTable('CotizacionesEventos')->getCotizacionesEventosPorCotizacionYTalento($this->getCotizacionId(),$this->getTalentoId());
            foreach($ces as $ce){
               $evento=$ce->getEventos();
               $evento->setSubject("Evento disponible");
               $evento->setDescription("Evento disponible o eliminar");
               $evento->setStatus(KsWCEventTable::$DISPONIBLE);
               $evento->save();
               $ce->delete();
            }
            foreach($this->getDetallesPagosTalentos() as $dpt){
                $dpt->delete();
            }
            foreach($this->getDetallesCotizacionConceptos() as $dcc){
                $dcc->delete();
            }  
            parent::delete($conn);
            return true;
        }else{
            return false;
        }
        
    }
    public function calcularConceptos($calcular=true){
        if($calcular){
            $dccs=$this->getDetallesCotizacionConceptos();
            $precio=0;
            foreach ($dccs as $dcc){
                $precio+=$dcc->getPrecio();
            }
            $this->setPrecio($precio);
            $this->save();
        }
    }
}
