<?php

/**
 * BaseProyectos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cliente_id
 * @property integer $contacto_id
 * @property string $evento
 * @property text $descripcion
 * @property text $actividad_general
 * @property string $lugar_evento
 * @property datetime $inicia_evento
 * @property datetime $termina_evento
 * @property smallint $is_active
 * @property Clientes $Clientes
 * @property Contactos $Contactos
 * @property Doctrine_Collection $Precotizaciones
 * @property Doctrine_Collection $Cotizaciones
 * 
 * @method integer             getClienteId()         Returns the current record's "cliente_id" value
 * @method integer             getContactoId()        Returns the current record's "contacto_id" value
 * @method string              getEvento()            Returns the current record's "evento" value
 * @method text                getDescripcion()       Returns the current record's "descripcion" value
 * @method text                getActividadGeneral()  Returns the current record's "actividad_general" value
 * @method string              getLugarEvento()       Returns the current record's "lugar_evento" value
 * @method datetime            getIniciaEvento()      Returns the current record's "inicia_evento" value
 * @method datetime            getTerminaEvento()     Returns the current record's "termina_evento" value
 * @method smallint            getIsActive()          Returns the current record's "is_active" value
 * @method Clientes            getClientes()          Returns the current record's "Clientes" value
 * @method Contactos           getContactos()         Returns the current record's "Contactos" value
 * @method Doctrine_Collection getPrecotizaciones()   Returns the current record's "Precotizaciones" collection
 * @method Doctrine_Collection getCotizaciones()      Returns the current record's "Cotizaciones" collection
 * @method Proyectos           setClienteId()         Sets the current record's "cliente_id" value
 * @method Proyectos           setContactoId()        Sets the current record's "contacto_id" value
 * @method Proyectos           setEvento()            Sets the current record's "evento" value
 * @method Proyectos           setDescripcion()       Sets the current record's "descripcion" value
 * @method Proyectos           setActividadGeneral()  Sets the current record's "actividad_general" value
 * @method Proyectos           setLugarEvento()       Sets the current record's "lugar_evento" value
 * @method Proyectos           setIniciaEvento()      Sets the current record's "inicia_evento" value
 * @method Proyectos           setTerminaEvento()     Sets the current record's "termina_evento" value
 * @method Proyectos           setIsActive()          Sets the current record's "is_active" value
 * @method Proyectos           setClientes()          Sets the current record's "Clientes" value
 * @method Proyectos           setContactos()         Sets the current record's "Contactos" value
 * @method Proyectos           setPrecotizaciones()   Sets the current record's "Precotizaciones" collection
 * @method Proyectos           setCotizaciones()      Sets the current record's "Cotizaciones" collection
 * 
 * @package    sfJerryMlAdmin
 * @subpackage model
 * @author     Ricardo Alcantara Gomez <richpolis@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseProyectos extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('proyectos');
        $this->hasColumn('cliente_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('contacto_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('evento', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'length' => 255,
             ));
        $this->hasColumn('descripcion', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('actividad_general', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('lugar_evento', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'length' => 255,
             ));
        $this->hasColumn('inicia_evento', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('termina_evento', 'datetime', null, array(
             'type' => 'datetime',
             ));
        $this->hasColumn('is_active', 'smallint', null, array(
             'type' => 'smallint',
             'notnull' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Clientes', array(
             'local' => 'cliente_id',
             'foreign' => 'id'));

        $this->hasOne('Contactos', array(
             'local' => 'contacto_id',
             'foreign' => 'id'));

        $this->hasMany('Precotizaciones', array(
             'local' => 'id',
             'foreign' => 'proyecto_id'));

        $this->hasMany('Cotizaciones', array(
             'local' => 'id',
             'foreign' => 'proyecto_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'evento',
             ),
             'unique' => true,
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($sluggable0);
    }
}