<?php

/**
 * BaseCotizaciones
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $cliente_id
 * @property integer $contacto_id
 * @property integer $user_id
 * @property integer $manager_id
 * @property string $evento
 * @property text $descripcion
 * @property string $pdf
 * @property integer $status
 * @property string $comisionista
 * @property double $subtotal
 * @property double $iva
 * @property boolean $is_pay
 * @property boolean $is_active
 * @property Clientes $Clientes
 * @property Contactos $Contactos
 * @property sfGuardUser $User
 * @property sfGuardUser $Manager
 * @property Doctrine_Collection $Eventos
 * @property Doctrine_Collection $DetallesCotizacion
 * @property Doctrine_Collection $CotizacionesEventos
 * @property Doctrine_Collection $DetallesPagos
 * @property Doctrine_Collection $Contratos
 * 
 * @method integer             getClienteId()           Returns the current record's "cliente_id" value
 * @method integer             getContactoId()          Returns the current record's "contacto_id" value
 * @method integer             getUserId()              Returns the current record's "user_id" value
 * @method integer             getManagerId()           Returns the current record's "manager_id" value
 * @method string              getEvento()              Returns the current record's "evento" value
 * @method text                getDescripcion()         Returns the current record's "descripcion" value
 * @method string              getPdf()                 Returns the current record's "pdf" value
 * @method integer             getStatus()              Returns the current record's "status" value
 * @method string              getComisionista()        Returns the current record's "comisionista" value
 * @method double              getSubtotal()            Returns the current record's "subtotal" value
 * @method double              getIva()                 Returns the current record's "iva" value
 * @method boolean             getIsPay()               Returns the current record's "is_pay" value
 * @method boolean             getIsActive()            Returns the current record's "is_active" value
 * @method Clientes            getClientes()            Returns the current record's "Clientes" value
 * @method Contactos           getContactos()           Returns the current record's "Contactos" value
 * @method sfGuardUser         getUser()                Returns the current record's "User" value
 * @method sfGuardUser         getManager()             Returns the current record's "Manager" value
 * @method Doctrine_Collection getEventos()             Returns the current record's "Eventos" collection
 * @method Doctrine_Collection getDetallesCotizacion()  Returns the current record's "DetallesCotizacion" collection
 * @method Doctrine_Collection getCotizacionesEventos() Returns the current record's "CotizacionesEventos" collection
 * @method Doctrine_Collection getDetallesPagos()       Returns the current record's "DetallesPagos" collection
 * @method Doctrine_Collection getContratos()           Returns the current record's "Contratos" collection
 * @method Cotizaciones        setClienteId()           Sets the current record's "cliente_id" value
 * @method Cotizaciones        setContactoId()          Sets the current record's "contacto_id" value
 * @method Cotizaciones        setUserId()              Sets the current record's "user_id" value
 * @method Cotizaciones        setManagerId()           Sets the current record's "manager_id" value
 * @method Cotizaciones        setEvento()              Sets the current record's "evento" value
 * @method Cotizaciones        setDescripcion()         Sets the current record's "descripcion" value
 * @method Cotizaciones        setPdf()                 Sets the current record's "pdf" value
 * @method Cotizaciones        setStatus()              Sets the current record's "status" value
 * @method Cotizaciones        setComisionista()        Sets the current record's "comisionista" value
 * @method Cotizaciones        setSubtotal()            Sets the current record's "subtotal" value
 * @method Cotizaciones        setIva()                 Sets the current record's "iva" value
 * @method Cotizaciones        setIsPay()               Sets the current record's "is_pay" value
 * @method Cotizaciones        setIsActive()            Sets the current record's "is_active" value
 * @method Cotizaciones        setClientes()            Sets the current record's "Clientes" value
 * @method Cotizaciones        setContactos()           Sets the current record's "Contactos" value
 * @method Cotizaciones        setUser()                Sets the current record's "User" value
 * @method Cotizaciones        setManager()             Sets the current record's "Manager" value
 * @method Cotizaciones        setEventos()             Sets the current record's "Eventos" collection
 * @method Cotizaciones        setDetallesCotizacion()  Sets the current record's "DetallesCotizacion" collection
 * @method Cotizaciones        setCotizacionesEventos() Sets the current record's "CotizacionesEventos" collection
 * @method Cotizaciones        setDetallesPagos()       Sets the current record's "DetallesPagos" collection
 * @method Cotizaciones        setContratos()           Sets the current record's "Contratos" collection
 * 
 * @package    sfJerryMlAdmin
 * @subpackage model
 * @author     Ricardo Alcantara Gomez <richpolis@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class BaseCotizaciones extends sfDoctrineRecord
{
    public function setTableDefinition()
    {
        $this->setTableName('cotizaciones');
        $this->hasColumn('cliente_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('contacto_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('user_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('manager_id', 'integer', null, array(
             'type' => 'integer',
             ));
        $this->hasColumn('evento', 'string', 255, array(
             'type' => 'string',
             'notnull' => true,
             'default' => 'Titulo de cotizacion',
             'length' => 255,
             ));
        $this->hasColumn('descripcion', 'text', null, array(
             'type' => 'text',
             'notnull' => true,
             ));
        $this->hasColumn('pdf', 'string', 255, array(
             'type' => 'string',
             'default' => 'sin_archivo.pdf',
             'length' => 255,
             ));
        $this->hasColumn('status', 'integer', 1, array(
             'type' => 'integer',
             'notnull' => false,
             'length' => 1,
             ));
        $this->hasColumn('comisionista', 'string', 255, array(
             'type' => 'string',
             'notnull' => false,
             'default' => '',
             'length' => 255,
             ));
        $this->hasColumn('subtotal', 'double', null, array(
             'type' => 'double',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('iva', 'double', null, array(
             'type' => 'double',
             'notnull' => false,
             'default' => 0,
             ));
        $this->hasColumn('is_pay', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             'default' => false,
             ));
        $this->hasColumn('is_active', 'boolean', null, array(
             'type' => 'boolean',
             'notnull' => false,
             'default' => true,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasOne('Clientes', array(
             'local' => 'cliente_id',
             'foreign' => 'id'));

        $this->hasOne('Contactos', array(
             'local' => 'contacto_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as User', array(
             'local' => 'user_id',
             'foreign' => 'id'));

        $this->hasOne('sfGuardUser as Manager', array(
             'local' => 'manager_id',
             'foreign' => 'id'));

        $this->hasMany('KsWCEvent as Eventos', array(
             'refClass' => 'CotizacionesEventos',
             'local' => 'evento_id',
             'foreign' => 'cotizacion_id'));

        $this->hasMany('DetallesCotizacion', array(
             'local' => 'id',
             'foreign' => 'cotizacion_id'));

        $this->hasMany('CotizacionesEventos', array(
             'local' => 'id',
             'foreign' => 'cotizacion_id'));

        $this->hasMany('DetallesPagos', array(
             'local' => 'id',
             'foreign' => 'cotizacion_id'));

        $this->hasMany('Contratos', array(
             'local' => 'id',
             'foreign' => 'cotizacion_id'));

        $timestampable0 = new Doctrine_Template_Timestampable();
        $versionable0 = new Doctrine_Template_Versionable();
        $sluggable0 = new Doctrine_Template_Sluggable(array(
             'fields' => 
             array(
              0 => 'evento',
             ),
             'unique' => true,
             'canUpdate' => true,
             ));
        $this->actAs($timestampable0);
        $this->actAs($versionable0);
        $this->actAs($sluggable0);
    }
}