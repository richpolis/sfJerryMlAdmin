<?php

/**
 * CotizacionesTable
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 */
class CotizacionesTable extends Doctrine_Table
{
    /**
     * Returns an instance of this class.
     *
     * @return object CotizacionesTable
     */
    static public $status = array(
        '0' => 'En captura',
        '1' => 'Enviado a cliente',
        '2' => 'Aprobado',
        '-1' =>'Cancelado',
        '-2' =>'Cotizacion Caida',
        '3' => 'Pagos Liberados',
    );

    static public $tipos_cotizacion = array(
        '1' => 'DF',
        '2' => 'FORANEA',
        '3' => 'CAMPAÃ‘A',
    );
    
    public function getTypesStatus()
    {
      return self::$status;
    }
    public function getTiposCotizacion()
    {
      return self::$tipos_cotizacion;
    }
    
    static public $CAYO_COTIZACION = -2;      
    static public $CANCELADO = -1;      
    static public $INCOMPLETO = 0;      
    static public $MEDIACION = 1;      
    static public $APROBADA = 2;      
    static public $PAGOS_LIBERADOS = 3;

    static public $IVA = 0.16;
    static public $CON_IVA = 1.16;
    
    static public $TIPO_COTIZACION_DF = 1;
    static public $TIPO_COTIZACION_FORANEA = 2;
    static public $TIPO_COTIZACION_CAMPANA= 3 ;
    
    static public $NIVEL_DETALLE    = 1;
    static public $NIVEL_COTIZACION = 2;
    static public $NIVEL_TEMPLATE   = 3;
    
    public static function getInstance()
    {
        return Doctrine_Core::getTable('Cotizaciones');
    }
    
    public function getCriteriaOrdenada(){
        $q=Doctrine_Query::create()
           ->from('Cotizaciones cot')
           ->orderBy('cot.created_at desc');
        return $q;
        
        
    }
    public function getCriteriaOrdenadaPorActualizacion(){
        $q=Doctrine_Query::create()
                ->from('Cotizaciones cot')
                ->orderBy('cot.updated_at DESC');
        return $q;
    }
    /*public function getCriteriaUltimasCotizaciones(){
        $q=$this->getCriteriaOrdenadaPorActualizacion();
        $rootAlias = $q->getRootAlias();
        $q->leftJoin($rootAlias . '.Clientes c');
        $q->leftJoin($rootAlias . '.Contactos s');
        $q->leftJoin($rootAlias . '.DetallesCotizacion d');
        $q->leftJoin('d.Talentos t');
        return $q;
    }*/
    
    public function getCriteriaUltimasCotizaciones($activas=true){
        $q=$this->createQuery('cot');  
        $rootAlias = $q->getRootAlias();
        $user=  sfContext::getInstance()->getUser()->getGuardUser(); 
        if(!$user->getIsSuperAdmin()){
            $q->addWhere($rootAlias.'.user_id=?',$user->getId());
        }
        $q->leftJoin($rootAlias . '.Clientes cli');
        $q->leftJoin($rootAlias . '.Contactos co');
        $q->leftJoin($rootAlias . '.DetallesCotizacion dc');
        $q->leftJoin('dc.Talentos t');
        $q->orderBy('dc.position asc');
        $q->andWhere($rootAlias.'.is_active=?',$activas);
        return $q;
    }
    
    
    public function getUltimasCotizaciones($activas=true){
        $q=$this->getCriteriaUltimasCotizaciones($activas);
        return $q->execute();
    }
    
    public function retrieveBackendCotizacionesList(Doctrine_Query $q)
    {
      $user=  sfContext::getInstance()->getUser();   
      if($user->getModoPago()){
          return $this->retrieveBackendCotizacionesListModoPago($q);
      }elseif($user->getModoContrato()){
          return $this->retrieveBackendCotizacionesListModoContrato($q);
      }elseif($user->getModoPagoTalento()){
          return $this->retrieveBackendCotizacionesListModoPagoTalento($q);
      }else{
          return $this->retrieveBackendCotizacionesListNormal($q);
      }
           
      
    }
    
    public function retrieveBackendCotizacionesListNormal(Doctrine_Query $q)
    {
      $user=  sfContext::getInstance()->getUser();   
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Clientes c');
      $q->leftJoin($rootAlias . '.Contactos s');
      if(!$user->getGuardUser()->getIsSuperAdmin()){
        $q->addWhere($rootAlias.'.user_id=?',$user->getGuardUser()->getId());
      }
      
      if($user->getCliente()>0){
          $q->addWhere('c.id=?', $user->getCliente());
      }
      if($user->getContacto()>0){
          $q->addWhere('s.id=?', $user->getContacto());
      }
      if(count($user->getCotizaciones())>0){
          $q->whereNotIn($rootAlias.'.id', $user->getCotizaciones());
      }
      
      $q->orderBy($rootAlias.'.created_at desc');
           
      return $q;
    }
    
    public function retrieveBackendCotizacionesListModoContrato(Doctrine_Query $q)
    {
      $user=  sfContext::getInstance()->getUser();   
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Clientes c');
      $q->leftJoin($rootAlias . '.Contactos s');
      $q->leftJoin($rootAlias . '.Contratos co');
      $q->where($rootAlias.'.is_active=?',true);
      $qContratos=$q->createSubquery()
        ->select('cot.cotizaciones_id')
        ->from('Contratos cot');
      if($user->getCliente()>0){
          $q->addWhere('c.id=?', $user->getCliente());
          $qContratos->where('cot.cliente_id=?',$user->getCliente());
      }
      if(count($user->getCotizaciones())>0){
          $q->whereNotIn($rootAlias.'.id', $user->getCotizaciones());
      }
      $q->orderBy($rootAlias.'.created_at desc');
                  
           
      
           
      return $q;
    }
    
    public function retrieveBackendCotizacionesListModoPago(Doctrine_Query $q)
    {
      $user=  sfContext::getInstance()->getUser();   
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Clientes c');
      $q->leftJoin($rootAlias . '.Contactos s');
      $q->where($rootAlias.'.is_active=?',true);
      $qDetallesPago=$q->createSubquery()
        ->select('dp.cotizaciones_id')
        ->from('DetallesPagos dp');
      
      if($user->getCliente()>0){
          $q->addWhere('c.id=?', $user->getCliente());
          
          $qDetallesPago->leftJoin('dp.Pagos p')
                  ->where('p.cliente_id=?',$user->getCliente());
      }
      if(count($user->getCotizaciones())>0){
          $q->whereNotIn($rootAlias.'.id', $user->getCotizaciones());
      }
      $q->andWhereNotIn($rootAlias.'.id', $qDetallesPago->getDql()); 
      $q->addWhere($rootAlias.'.is_pay=?',false);
      $q->addWhere($rootAlias.'.status  BETWEEN ? TO ?',array(2,3));
      
      $q->orderBy($rootAlias.'.created_at desc');
      
      return $q;
    }
    
    public function retrieveBackendCotizacionesListModoPagoTalento(Doctrine_Query $q)
    {
      $user=  sfContext::getInstance()->getUser();   
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Clientes c');
      $q->leftJoin($rootAlias . '.Contactos s');
      $q->leftJoin($rootAlias . '.DetallesCotizacion dc');
      $q->leftJoin('dc.Talentos t');
      $q->where($rootAlias.'.is_active=?',true);
      $qDetallesPagosTalento=$q->createSubquery()
        ->select('dpt.cotizaciones_id')
        ->from('DetallesPagosTalentos dpt');
      
      if(count($user->getTalentos())>0){
          $talentos=$user->getTalentos();
          if(!$talentos[0]==null){
          $q->andWhere('t.id=?', $talentos[0]);
          
          $qDetallesPagosTalento->leftJoin('dpt.PagosTalentos pt')
                  ->where('pt.talento_id=?',$talentos[0]);
          
          } 
      }
      if(count($user->getCotizaciones())>0){
          $q->whereNotIn($rootAlias.'.id', $user->getCotizaciones());
      }
      
      $q->andWhereNotIn($rootAlias.'.id', $qDetallesPagosTalento->getDql());
      $q->addWhere('dc.is_pay_talento=?',false);
      $q->addWhere($rootAlias.'.status=?',3);
      
      $q->orderBy($rootAlias.'.created_at desc');
      
      return $q;
    }
    
    public function getCotizacionConClienteTalentoDetallesForId($id){
      $q=$this->createQuery('a');  
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.Empresas empresa');
      $q->leftJoin($rootAlias . '.Clientes cli');
      $q->leftJoin($rootAlias . '.Contactos contacto');
      $q->leftJoin($rootAlias . '.Manager mu');
      $q->leftJoin($rootAlias . '.DetallesCotizacion dc');
      $q->leftJoin($rootAlias . '.CotizacionesComisionistas cotco');
      $q->leftJoin('cotco.Comisionistas comisionista');
      $q->leftJoin($rootAlias . '.CotizacionesConceptos cotc');
      $q->leftJoin('cotc.Conceptos concepto');
      $q->leftJoin('dc.Talentos t');
      $q->addWhere($rootAlias.'.id=?',$id);
      return $q->fetchOne();
    }
    
    public function getCotizacionConEventosForCotizacionAndTalentoId($cotizacion,$talento){
      $q=$this->createQuery('a');  
      $rootAlias = $q->getRootAlias();
      $q->leftJoin($rootAlias . '.DetallesCotizacion d');
      $q->leftJoin($rootAlias . '.CotizacionesEventos ce');
      $q->leftJoin($rootAlias . '.Eventos e');
      $q->leftJoin('d.Talentos t');
      $q->where($rootAlias.'.id=?',$cotizacion);
      $q->addWhere('t.id=?',$talento);
      
      return $q->fetchOne();
    }
    
    public function getCotizacionesPorPago($pago,$pagadas=false){
        $q=$this->createQuery('a');  
        $rootAlias = $q->getRootAlias();
        $q->leftJoin($rootAlias . '.Clientes c');
        $q->leftJoin($rootAlias . '.Contactos s');
        $q->leftJoin($rootAlias . '.DetallesPagos dp');
        $q->leftJoin($rootAlias . '.DetallesCotizacion dc');
        $q->leftJoin('dc.Talentos t');
        $q->addWhere('dp.pagos_id=?',$pago);
        //$q->addWhere($rootAlias . '.is_pay= ?',$pagadas);
        //$q->addWhere('dp.status<=1');// 0 en captura, 1 aprobada, 2 pagado
        $q->addOrderBy('dp.cotizacion_id asc');
        $q->addOrderBy('dp.created_at asc');
        return $q->execute();
    }
    
    public function getCotizacionesPendientesDePago($mostrar=true){
        $q=$this->createQuery('a');  
        $rootAlias = $q->getRootAlias();
        $q->leftJoin($rootAlias . '.Clientes cli');
        $q->leftJoin($rootAlias . '.Contactos co');
        $q->leftJoin($rootAlias . '.DetallesPagos dp');
        $q->leftJoin('dp.Pagos pago');
        $q->leftJoin('pago.Clientes clipago');
        $q->leftJoin($rootAlias . '.DetallesCotizacion dc');
        $q->leftJoin($rootAlias . '.Facturas fact');
        $q->leftJoin($rootAlias . '.Contratos contrato');
        $q->leftJoin('dc.Talentos t');
        $q->leftJoin('dc.DetallesPagosTalentos dpt');
        $q->leftJoin('dpt.PagosTalentos pt');
        $q->leftJoin('pt.Talentos pttal');
        //$q->addWhere($rootAlias . '.is_show_pay= ?',$mostrar);
        $q->andWhere($rootAlias.'.is_active=?',$mostrar);
        $q->addOrderBy('dp.cotizacion_id asc');
        $q->addOrderBy('dp.created_at asc');
        $user=  sfContext::getInstance()->getUser()->getGuardUser();
        if(!$user->getIsSuperAdmin()){
           $q->addWhere($rootAlias.'.user_id=?',$user->getId());
        }
        
        return $q->execute();
    }
    
    public function getCotizacionesSinFacturaAsociada(){
        $q=$this->createQuery('a');  
        $rootAlias = $q->getRootAlias();
        $q->leftJoin($rootAlias . '.Clientes cli');
        $q->leftJoin($rootAlias . '.Contactos co');
        $q->leftJoin($rootAlias . '.Facturas fact');
        $q->addWhere($rootAlias.'.status>=?',CotizacionesTable::$INCOMPLETO);
        $q->addWhere('fact.cotizacion_id IS NULL');
        
        $user=  sfContext::getInstance()->getUser()->getGuardUser();
        if(!$user->getIsSuperAdmin()){
           $q->addWhere($rootAlias.'.user_id=?',$user->getId());
        }
        
        return $q->execute();
    }
    
    public function getCotizacionesPorPagosTalentos($pago,$pagadas=false){
        $q=$this->createQuery('a');  
        $rootAlias = $q->getRootAlias();
        $q->leftJoin($rootAlias . '.Clientes c');
        $q->leftJoin($rootAlias . '.Contactos s');
        $q->leftJoin($rootAlias . '.DetallesPagosTalentos dpt');
        $q->leftJoin($rootAlias . '.DetallesCotizacion dc');
        $q->leftJoin('dc.Talentos t');
        //$q->where('dc.is_pay_talento=?',$pagadas);
        $q->addWhere('dpt.pagos_talentos_id=?',$pago);
        //$q->addWhere('dp.status<=1');// 0 en captura, 1 aprobada, 2 pagado
        $q->addOrderBy('dpt.cotizacion_id asc');
        return $q->execute();
    }
    
    
    public function getCotizacionesPorArreglo($arreglo){
        $q=$this->getCriteriaOrdenada();
        $rootAlias = $q->getRootAlias();
        $q->andWhereIn($rootAlias.'.id', $arreglo);
        $q->leftJoin($rootAlias . '.Clientes c');
        $q->leftJoin($rootAlias . '.Contactos s');
        $q->leftJoin($rootAlias . '.DetallesCotizacion d');
        $q->leftJoin('d.Talentos t');
        return $q->execute();
    }
        
    public function getHistorialPagosJerryml(array $valores){
        $q=$this->getCriteriaOrdenada();
        $rootAlias = $q->getRootAlias();
        $desde=$valores['desde']['year']."-".$valores['desde']['month']."-".$valores['desde']['day'];
        $hasta=$valores['hasta']['year']."-".$valores['hasta']['month']."-".$valores['hasta']['day'];
        $q->leftJoin($rootAlias . '.DetallesPagos dp');
        $q->leftJoin($rootAlias . '.DetallesCotizacion dc');
        $q->leftJoin('dc.Eventos e');
        $q->leftJoin($rootAlias . '.Clientes cli');
        $q->addWhere('dp.fecha_pago BETWEEN ? to ?',array($desde,$hasta));
        $q->addWhere($rootAlias . '.is_pay=?',true);
        $q->addOrderBy('dp.fecha_pago asc');
        return $q->execute();
    }
    
    /* 
     * reportes recuperados
     *  */
    public function getCotizacionesEventosPorCotizacionYTalento($cotizacion,$talento){
    	$q=$this->getCriteria();
    	$rootAlias = $q->getRootAlias();
        $q->leftJoin($rootAlias . '.Cotizaciones cot');
        $q->leftJoin($rootAlias . '.Eventos e');
        $q->leftJoin('e.Talentos tal');
    	$q->where('cot.id=?',$cotizacion);
        $q->andWhere('tal.id=?',$talento);
    	return $q->execute();
    }
    public function getCotizacionesEventosPorArreglo($arreglo){
    	$q=$this->getCriteriaOrdenada();
    	$q->andWhereIn('e.id', $arreglo);
    	$rootAlias = $q->getRootAlias();
    	$q->leftJoin($rootAlias . '.Talentos t');
    	return $q->execute();
    } 
}    