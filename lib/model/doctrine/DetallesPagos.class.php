<?php

/**
 * DetallesPagos
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @package    sfJerryMlAdmin
 * @subpackage model
 * @author     Ricardo Alcantara Gomez <richpolis@gmail.com>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
class DetallesPagos extends BaseDetallesPagos
{
    public function getTipoPagoString() {
        $choices=Doctrine_Core::getTable('DetallesPagos')->getTypes();
        return $choices[$this->getTipoPago()];
    }
    public function getStatusString() {
        $choices=Doctrine_Core::getTable('DetallesPagos')->getTypesStatus();
        return $choices[$this->getStatus()];
    }
    public function save(\Doctrine_Connection $conn = null) {
        if(!$this->isNew()){
            if(!$this->getFechaPago()){
                $this->setFechaPago(date("Y-m-d"));
            }
            
        }
        if($this->getImporte()>0){
            $iva=$this->getImporte() * CotizacionesTable::$IVA;
            $this->setIva($iva);
        }else{
            if($this->getTipoPago()==2){
                $this->setImporte($this->getSaldoLinea());
            }
        }
        
        if(!$this->getUserId()){
            if($this->getStatus()==1){
                $this->setUserId(sfContext::getInstance()->getUser()->getGuardUser()->getId());
            }
        }
        
        if($this->getStatus()==PagosTable::$APROBADO){
            $this->setFechaPago(date("Y-m-d"));
        }elseif($this->getStatus()==PagosTable::$PAGOS_CALCULADOS){
            $this->setFechaPago(date("Y-m-d"));
        }
        
        parent::save($conn);
        
        $this->getPagos()->calcular();
    }
    
    public function delete(\Doctrine_Connection $conn = null) {
        parent::delete($conn);
    }
    
    public function liberarPago(){
        if($this->getStatus()==PagosTable::$APROBADO){
            $pago=$this->getPagos();
            $cliente=$pago->getClientes();
            $importe=$this->getImporte();
            $iva=$importe * CotizacionesTable::$IVA;
            $cliente->setSaldo($cliente->getSaldo()-$importe);
            $pago->setImporte($pago->getImporte()+$importe);
            $pago->setIva($pago->getIva()+$iva);
            $cliente->save();
            $pago->save();
            //$pago->calcular();
            $this->setStatus(PagosTable::$PAGOS_CALCULADOS);
            $this->save();
        }
    }
    public function getSaldoLinea(){
        $cotizacion=$this->getCotizaciones();
        $pago=$this->getPagos();
        $importePagado=0;
        $totalCotizacion=$cotizacion->getSubtotal();
        foreach($pago->getDetallesPagos() as $dp){
            if($dp->getCotizacionId()==$cotizacion->getId() && $dp->getStatus()==PagosTable::$PAGOS_CALCULADOS){
                $importePagado+=$dp->getImporte();
            }
        }
        return $totalCotizacion-$importePagado;
    }
    
    public function getTotal(){
        return $this->getImporte()+$this->getIva();
    }
    
}
